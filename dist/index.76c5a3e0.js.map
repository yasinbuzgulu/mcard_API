{"mappings":"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","sources":["Applicant.ts","DataStorage.ts","TableManager.ts","ListManager.ts","Verifications.ts","Card.ts","City.ts","index.ts","ApplicantManager.ts","CityManager.ts","CardManager.ts"],"sourcesContent":["import { City } from \"./City\";\nimport { IApplicant } from \"./typeScriptFiles/interface/IApplicant\";\n\n/**\n * Program başvuran kişinin bilgilerinin saklandığı sınıf\n */\n\nexport class Applicant implements IApplicant {\n  private _applicantName: string;\n  private _applicantSurname: string;\n  private _applicantBirthDate: string;\n  private _applicantID: number;\n  private _typeOfApplicantBasedOnAge: string;\n  private _typeOfApplicantBasedOnEducation: string;\n\n  constructor(applicantName: string, applicantSurname: string, applicantBirthDate: string, _applicantID: number,\n     typeOfApplicantBasedOnAge: string, typeOfApplicantBasedOnEducation: string) {\n        this._applicantName = applicantName;\n        this._applicantSurname = applicantSurname;\n        this._applicantBirthDate = applicantBirthDate;\n        this._applicantID = _applicantID;\n        this._typeOfApplicantBasedOnAge = typeOfApplicantBasedOnAge;\n        this._typeOfApplicantBasedOnEducation = typeOfApplicantBasedOnEducation;\n  }\n\n    get ApplicantName() {\n      return this._applicantName;\n    }\n    set ApplicantName(applicantName : string){\n      this._applicantName = applicantName;\n    }\n\n    get ApplicantSurname() {\n      return this._applicantSurname;\n    }\n    set ApplicantSurname(applicantSurname : string){\n      this._applicantSurname = applicantSurname;\n    }\n  \n    get ApplicantBirthDate() {\n      return this._applicantBirthDate;\n    }\n    set ApplicantBirthDate(applicantBirthDate : string){\n      this._applicantBirthDate = applicantBirthDate;\n    }\n\n    get ApplicantID() {\n      return this._applicantID;\n    }\n    set ApplicantID(applicantID : number){\n      this._applicantID = applicantID;\n    }\n\n    get ApplicantTypeBasedOnAge() {\n      return this._typeOfApplicantBasedOnAge;\n    }\n    set ApplicantTypeBasedOnAge(applicantTypeBasedOnAge : string){\n      this._typeOfApplicantBasedOnAge = applicantTypeBasedOnAge;\n    }\n\n    get ApplicantTypeBasedOnEducation() {\n      return this._typeOfApplicantBasedOnEducation;\n    }\n    set ApplicantTypeBasedOnEducation(applicantTypeBasedOnEducation : string){\n      this._typeOfApplicantBasedOnEducation = applicantTypeBasedOnEducation;\n    }  \n}\n\n","import { IApplicant } from './typeScriptFiles/interface/IApplicant';\nimport { ICard } from './typeScriptFiles/interface/ICard';\nimport { ICity } from './typeScriptFiles/interface/ICity';\n\nexport class DataStorage {\n  /**\n   * Programa kayıt olunan tüm verilerin tutulduğu sınıf\n   */\nstatic cities:  Array<ICity> = new Array();\nstatic applicants: Array<IApplicant> = new Array();\nstatic cards: Array<ICard> = new Array();\n\n/**\n * Programda kullanılacak \n */\nstatic listApplicants() {\n  alert(\"This is an alert message box. \" + this.applicants[0]);  // display string message\n}\n\n/**\n * Default olarak programa basılan Şehir-olanak bilgileri\n */\nstatic createCityList() {\n  this.cities.push(\n      {\n        CityName: \"ISTANBUL\",\n        OpportunityName: \"OTOPARK\",\n        PerYearPrice: 225,\n        TopLimitYearValue: 1,\n        CityOpportunityId: 1\n      },\n      {\n        CityName: \"ISTANBUL\",\n        OpportunityName: \"KUTUPHANE\",\n        PerYearPrice: 400,\n        TopLimitYearValue: 3,\n        CityOpportunityId :2\n      },\n      {\n        CityName: \"ISTANBUL\",\n        OpportunityName: \"TIYATRO\",\n        PerYearPrice: 400,\n        TopLimitYearValue: 3,\n        CityOpportunityId:3\n      },\n      {\n        CityName: \"ANKARA\",\n        OpportunityName: \"KUTUPHANE\",\n        PerYearPrice: 300,\n        TopLimitYearValue: 4,\n        CityOpportunityId:4\n      },  {\n        CityName: \"BURSA\",\n        OpportunityName: \"KUTUPHANE\",\n        PerYearPrice: 250,\n        TopLimitYearValue: 5,\n        CityOpportunityId:5\n      },  {\n        CityName: \"ADANA\",\n        OpportunityName: \"KUTUPHANE\",\n        PerYearPrice: 200,\n        TopLimitYearValue: 5,\n        CityOpportunityId:6\n      },  {\n        CityName: \"IZMIR\",\n        OpportunityName: \"KUTUPHANE\",\n        PerYearPrice: 300,\n        TopLimitYearValue: 4,\n        CityOpportunityId:7\n      });\n\n    return this.cities;\n  }\n\n/**\n * Default olarak programa basılan kullanıcı bilgileri\n */\n  static createApplicantlist() {\n    this.applicants.push(\n      {\n        ApplicantName :\"YASIN\",\n        ApplicantSurname: \"BUZGULU\",\n        ApplicantBirthDate: \"1997-09-05\",\n        ApplicantID: 53452312702,\n        ApplicantTypeBasedOnAge: \"Normal\",\n        ApplicantTypeBasedOnEducation:  \"Öğrenci\"\n      });\n      return this.applicants;\n  }\n}\n\n\n\n","import { DataStorage } from \"./DataStorage\";\nimport { ListManager } from \"./ListManager\";\nimport { IApplicant } from \"./typeScriptFiles/interface/IApplicant\";\n\n\nexport class TableManager {\n\n static editUserTable (userList, i) {\n                let applicantNameEdit = <HTMLInputElement>(  document.getElementById(\"applicantNameAttach\")  );\n                applicantNameEdit.defaultValue = DataStorage.applicants[i].ApplicantName.toString();\n                let applicantSurnameEdit = <HTMLInputElement>(  document.getElementById(\"applicantSurnameAttach\")  );\n                applicantSurnameEdit.defaultValue = DataStorage.applicants[i].ApplicantSurname.toString(); \n        \n                let applicantIdEdit = <HTMLInputElement>(  document.getElementById(\"applicantIDAttach\")  );\n                applicantIdEdit.defaultValue = DataStorage.applicants[i].ApplicantID.toString(); \n\n                document.getElementById('applicantBirthDateAttach').value = DataStorage.applicants[i].ApplicantBirthDate.substring(0, 10);\n\n                if(DataStorage.applicants[i].ApplicantTypeBasedOnAge==\"Çocuk\") {\n                        document.getElementById(\"citizenTypeSelection\").value = '0'\n                }\n                else if (DataStorage.applicants[i].ApplicantTypeBasedOnAge==\"Normal\") {\n                        document.getElementById(\"citizenTypeSelection\").value = '1';\n                }\n                else if (DataStorage.applicants[i].ApplicantTypeBasedOnAge==\"Yaşlı\") {\n                        document.getElementById(\"citizenTypeSelection\").value = '2';\n                }\n\n                if(DataStorage.applicants[i].ApplicantTypeBasedOnEducation==\"Öğrenci\") {\n                        document.getElementById(\"applicatTypeSelection\").value = '0';\n                }\n                else if (DataStorage.applicants[i].ApplicantTypeBasedOnEducation==\"Sivil\") {\n                        document.getElementById(\"applicatTypeSelection\").value = '1';\n                }\n                else  {\n                        document.getElementById(\"applicatTypeSelection\").value = '2';\n                }\n        \n\n                DataStorage.applicants = DataStorage.applicants.filter (applicant => applicant.ApplicantName != userList[i].ApplicantName);\n                ListManager.refreshUserTable();\n        }\n\n static editCityTable (cityList, i) {\n                let cityNameEdit = <HTMLInputElement>(  document.getElementById(\"cityNameAttach\")  );\n                cityNameEdit.defaultValue = DataStorage.cities[i].CityName.toString();\n                let opportunityNameEdit = <HTMLInputElement>(  document.getElementById(\"opportunityNameAttach\")  );\n                opportunityNameEdit.defaultValue = DataStorage.cities[i].OpportunityName.toString(); \n                let perYearPriceEdit = <HTMLInputElement>(  document.getElementById(\"perYearPriceAttatch\")  );\n                perYearPriceEdit.value = DataStorage.cities[i].PerYearPrice.toString(); \n                let topLimitYearValueEdit = <HTMLInputElement>(  document.getElementById(\"topLimitYearValueAttach\")  );\n                topLimitYearValueEdit.defaultValue = DataStorage.cities[i].TopLimitYearValue.toString(); \n\n                DataStorage.cities = DataStorage.cities.filter (cityOpportunity => (cityOpportunity.CityName+cityOpportunity.OpportunityName) != (cityList[i].CityName+cityList[i].OpportunityName));\n                ListManager.refreshCityOpportunityTable();\n        }\n\n static editCardTable(cardList, i) {\n                let id =cardList[i].applicant.toString();\n                let myApplicantId = (id.slice(id.length - 11));\n                document.getElementById(\"myUserSelect\").value = myApplicantId;\n                document.getElementById(\"myCityOpportunitySelect\").value = cardList[i].city[0];\n                let cardPriceValueEdit = <HTMLInputElement>(  document.getElementById(\"cardPriceAttach\")  );\n                cardPriceValueEdit.defaultValue = cardList[i]._price.toString(); \n                \n                DataStorage.cards = DataStorage.cards.filter (card => (card.CardIdentitty) != (cardList[i].CardIdentitty));\n                ListManager.refreshCardTable();\n\n        }\n\n static resetUserPage() {\n                let applicantNameEdit = <HTMLInputElement>(  document.getElementById(\"applicantNameAttach\")  );\n                applicantNameEdit.defaultValue = \"\";\n                let applicantSurnameEdit = <HTMLInputElement>(  document.getElementById(\"applicantSurnameAttach\")  );\n                applicantSurnameEdit.defaultValue = \"\"; \n                let applicantSBirthDateEdit = <HTMLInputElement>(  document.getElementById(\"applicantBirthDateAttach\")  );\n                applicantSBirthDateEdit.value =\"\"; \n                let applicantIdEdit = <HTMLInputElement>(  document.getElementById(\"applicantIDAttach\")  );\n                applicantIdEdit.defaultValue = \"\"; \n                document.getElementById('userForm').reset() as HTMLFormElement;\n\n        }\n\n static resetCityPage() {\n                let cityNameEdit = <HTMLInputElement>(  document.getElementById(\"cityNameAttach\")  );\n                cityNameEdit.defaultValue = \"\";\n                let opportunityNameEdit = <HTMLInputElement>(  document.getElementById(\"opportunityNameAttach\")  );\n                opportunityNameEdit.defaultValue = \"\"; \n                let perYearPriceEdit = <HTMLInputElement>(  document.getElementById(\"perYearPriceAttatch\")  );\n                perYearPriceEdit.value = \"\"; \n                let topLimitYearValueEdit = <HTMLInputElement>(  document.getElementById(\"topLimitYearValueAttach\")  );\n                topLimitYearValueEdit.defaultValue = \"\"; \n                document.getElementById('cityForm').reset() as HTMLFormElement;\n\n         }\n\n static resetCardPage() {\n                let cardPriceEdit = <HTMLInputElement> (document.getElementById(\"cardPriceAttach\"));\n                cardPriceEdit.defaultValue = '';\n                let userSelectionEdit = <HTMLInputElement> (document.getElementById(\"myUserSelect\"));\n                userSelectionEdit.value=\"0\";\n                let citySelectionEdit = <HTMLInputElement> (document.getElementById(\"myCityOpportunitySelect\"));\n                citySelectionEdit.value=\"0\";\n                document.getElementById('cardForm').reset() as HTMLFormElement;\n\n        }\n\n}","import { DataStorage } from './DataStorage';\nimport { TableManager } from './TableManager';\nexport class ListManager {\n/**\n * Yeni Kart kaydında kaydedilen kullanıcıların listelendiği kısım\n */\n  static createUserSelectList(myUser) {\n    let selectList = document.createElement(\"select\");\n    selectList.id = \"myUserSelect\";\n    selectList.innerHTML = `<option value=\"none\" selected disabled hidden required> Lütfen Kullanıcı Seçiniz`;\n    myUser.appendChild(selectList);\n    for (let i = 0; i < DataStorage.applicants.length; i++) {\n      let option = document.createElement(\"option\");\n      option.value = DataStorage.applicants[i].ApplicantID.toString();\n      option.text = DataStorage.applicants[i].ApplicantName +\" \"+ DataStorage.applicants[i].ApplicantID;\n      selectList.appendChild(option);\n    }\n  }\n  /**\n   * Yeni kullanıcı eklendikçe, yeni kart kaydındaki kullanıcı selection listesini güncelleyen kısım\n   */\n  static updateUserSelectionList() {\n    let myUserSelectBox = document.getElementById(\"userField\");\n    myUserSelectBox.innerHTML = '';\n    ListManager.createUserSelectList(myUserSelectBox);\n  }\n/**\n * Yeni Kart kaydında şehir selection listesinin hazırlandığı kısım\n */\n  static createCityOpportunitySelectList(myCityOpportunity) {\n    let selectListCity = document.createElement(\"select\");\n    selectListCity.id = \"myCityOpportunitySelect\";\n    selectListCity.innerHTML = `<option value=\"none\" selected disabled hidden required>Lütfen Şehir-Olanak Seçiniz`;\n    selectListCity.onchange = function(evt){\n    var value = evt.target.value;\n    ListManager.createCitySelectList(myCityOpportunity,value);\n                };\n    myCityOpportunity.appendChild(selectListCity);\n    let city: string[] = [];\n    for(let i = 0; i < DataStorage.cities.length; i++) {\n      city.push(DataStorage.cities[i].CityName);\n    }\n    city = city.filter((element, i) => i === city.indexOf(element));\n\n    for (let i = 0; i < city.length; i++) {\n      let option = document.createElement(\"option\");\n      option.value = city[i] ;\n      option.text = city[i] ;\n      selectListCity.appendChild(option);\n    }\n  }\n/**\n * Yeni Kart kaydında şehir seçimine bağlı olarak olanakların checkbox lara koyulduğu kısım \n */\n    static createCitySelectList(myCitySelectBox,citiesName?) {\n    const checkBoxList = document.getElementById(\"checkBoxList\");\n    checkBoxList.innerHTML = \"\";\n    const myCityOpportunitySelect : HTMLInputElement  = document.getElementById(\"myCityOpportunitySelect\") as HTMLInputElement;\n    var selectedCitiesName = myCityOpportunitySelect.options[myCityOpportunitySelect.selectedIndex].value; \n    const citiesList = DataStorage.cities.filter(item => item.CityName == citiesName);\n\n    for (let i = 0; i < citiesList.length; i++) {\n\n      let selectListCity = document.createElement(\"input\");\n      selectListCity.type = \"checkbox\";\n      selectListCity.id = \"inputSelectOpportunity\" + i.toString();\n      selectListCity.name = \"selectOpportunity\";\n      selectListCity.value = citiesList[i].OpportunityName.toString();\n      var label = document.createElement('label');\n      label.htmlFor = \"inputSelectOpportunity\" + i.toString();\n      label.appendChild(document.createTextNode(citiesList[i].OpportunityName));\n      checkBoxList.appendChild(selectListCity);\n      checkBoxList.appendChild(label);\n    }\n  }\n/**\n * Şehir Selectiın List için Ekleme, Düzenleme ve silmelere işlemelerine bağlı değişikliklerin güncellendiği kısım\n */\n  static updateCityOpportunitySelectionList() {\n    let myCityOpportunitySelectBox = document.getElementById(\"cityOpportunityField\");\n    myCityOpportunitySelectBox.innerHTML = '';\n    ListManager.createCityOpportunitySelectList(myCityOpportunitySelectBox);\n  }\n  /**\n   *  olanak checkboxları için Ekleme, Düzenleme ve silmelere işlemelerine bağlı değişikliklerin güncellendiği kısım\n   */\n  static updateCitySelectionList() {\n    let myCityOpportunitySelectBox = document.getElementById(\"checkBoxList\");\n    myCityOpportunitySelectBox.innerHTML = '';\n    ListManager.createCitySelectList(myCityOpportunitySelectBox);\n  }\n\n/**\n * Kayıtlı kullanıcılar için listeleme ve tablo oluşturan kısım\n */\n  static createUserList(userList) {\n    let userTable = document.getElementById(\"userTableId\");\n    userTable.innerHTML = \"\";\n    let table = document.createElement(\"table\");\n    let t1body = document.createElement(\"tbody\");\n    table.id = \"userTableReferedId\";\n    table.innerHTML = `<thead>\n                              <tr>\n                              <th>İsim</th>\n                              <th>Soyisim</th>\n                              <th>Doğum Tarihi (YYYY-MM-DD)</th>\n                              <th>Kimlik Numarası</th>\n                              <th>Yaşa Göre Tip</th>\n                              <th>Eğitime Göre Tip</th>\n                              <th>Sil</th>\n                              <th>Düzenle</th>\n                              </tr>\n\t\t\t\t    \t\t\t    </thead>`;\n    userTable.appendChild(table);\n    for(let i = 0; i<userList.length; i++) {\n      let row = document.createElement(\"tr\");\n      let cell = document.createElement(\"td\");\n      let cellText = document.createTextNode(userList[i].ApplicantName);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(userList[i].ApplicantSurname);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(userList[i].ApplicantBirthDate);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(userList[i].ApplicantID);\n      cell.appendChild(cellText);\n\n      row.appendChild(cell);\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(userList[i].ApplicantTypeBasedOnAge);\n      cell.appendChild(cellText);\n\n      row.appendChild(cell);\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(userList[i].ApplicantTypeBasedOnEducation);\n      cell.appendChild(cellText);\n\n      row.appendChild(cell);\n      let cellButtonDelete = document.createElement(\"button\");\n      cell = document.createElement(\"td\");\n      cellButtonDelete.innerHTML = \"Sil\";\n\n      cellButtonDelete.addEventListener(\"click\", function () {\n        let confirmDelete = confirm (\"Kullanıcıyı silmek istediğinize emin misiniz? \\n Dikkat, Bu işlem geri alınamaz!\");\n        if (confirmDelete) {\n        DataStorage.applicants = DataStorage.applicants.filter (applicant => (applicant.ApplicantName+applicant.ApplicantID) != (userList[i].ApplicantName+userList[i].ApplicantID));\n        ListManager.refreshUserTable();\n        ListManager.updateUserSelectionList();\n        }\n        return;\n      } \n      );\n\n      cell.appendChild(cellButtonDelete);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      let cellEditButton = document.createElement(\"button\");\n     // cellEditButton.setAttribute(\"href\", \"mainPage\");\n      cellEditButton.innerHTML = \"Düzenle\";\n      cellEditButton.addEventListener(\"click\", function() {\n        window.location.href = '#applicantPage';\n        TableManager.editUserTable(userList, i);\n        return;\n        \n      });\n      cell.appendChild(cellEditButton);\n      row.appendChild(cell);\n       t1body.appendChild(row);\n\n     }\n     table.appendChild(t1body);\n     userTable.appendChild(table);\n\n  }\n  /**\n   * Kullanıcı listesinin Ekleme, Düzenleme ve silme işlemelerine bağlı değişiklikler ile güncellendiği kısım\n   */\n  static refreshUserTable() {\n    let element = document.getElementById(\"userTableReferedId\");\n    element.innerHTML = \"\";\n    element.parentNode.removeChild(element);\n    ListManager.createUserList(DataStorage.applicants);\n  }\n  /**\n   * Kayıtlı şehir olanaklar için listeleme ve tablo oluşturan kısım\n   */\n  static createCityOpportunityList(cityOpportunityList) {\n    let cityOpportunityTable = document.getElementById(\"cityOpportunityTableId\");\n    cityOpportunityTable.innerHTML = '';\n    let table = document.createElement(\"table\");\n    let t1body = document.createElement(\"tbody\");\n    table.id = \"cityOpportunityTableReferedId\";\n    table.innerHTML = `<thead>\n                              <tr>\n                              <th>Şehir İsmi</th>\n                              <th>Olanak İsmi</th>\n                              <th>1 Yıl için Ücreti</th>\n                              <th>Tanımlanabileceği Max. Yıl</th>\n                              <th>Sil</th>\n                              <th>Düzenle</th>\n                              </tr>\n\t\t\t\t    \t\t\t    </thead>`;\n                      cityOpportunityTable.appendChild(table);\n    for(let i = 0; i<cityOpportunityList.length; i++) {\n      let row = document.createElement(\"tr\");\n      let cell = document.createElement(\"td\");\n      let cellText = document.createTextNode(cityOpportunityList[i].CityName);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(cityOpportunityList[i].OpportunityName);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(cityOpportunityList[i].PerYearPrice);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(cityOpportunityList[i].TopLimitYearValue);\n      cell.appendChild(cellText);\n\n      row.appendChild(cell);\n      let cellButtonDelete = document.createElement(\"button\");\n      cell = document.createElement(\"td\");\n      cellButtonDelete.innerHTML = \"Sil\";\n\n      cellButtonDelete.addEventListener(\"click\", function () {\n        let confirmDelete = confirm (\"Şehir - Olanak bilgisini silmek istediğinize emin misiniz? \\n Dikkat, Bu işlem geri alınamaz!\");\n        if (confirmDelete) {\n        DataStorage.cities = DataStorage.cities.filter (cityOpportunity => (cityOpportunity.CityName+cityOpportunity.OpportunityName) != (cityOpportunityList[i].CityName+cityOpportunityList[i].OpportunityName));\n        ListManager.refreshCityOpportunityTable();\n        ListManager.updateCityOpportunitySelectionList();\n        ListManager.updateCitySelectionList();\n        }\n        return;\n\n      } );\n\n      cell.appendChild(cellButtonDelete);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      let cellEditButton = document.createElement(\"button\");\n      cellEditButton.innerHTML = \"Düzenle\";\n      cellEditButton.addEventListener(\"click\", function() {\n        window.location.href = '#cityPage';\n        TableManager.editCityTable(cityOpportunityList,i);\n        return;\n        \n      });\n      cell.appendChild(cellEditButton);\n      row.appendChild(cell);\n       t1body.appendChild(row);\n\n     }\n     table.appendChild(t1body);\n     cityOpportunityTable.appendChild(table);\n\n  }\n  /**\n   *  Şehir-Olanak listesinin Ekleme, Düzenleme ve silme işlemelerine bağlı değişiklikler ile güncellendiği kısım\n   */\n  static refreshCityOpportunityTable() {\n    let element = document.getElementById(\"cityOpportunityTableReferedId\");\n    element.innerHTML = \"\";\n    element.parentNode.removeChild(element);\n    ListManager.createCityOpportunityList(DataStorage.cities);\n  }\n  /**\n   *Kayıtlı kartlar için listeleme ve tablo oluşturan kısım\n   */\n  static createCardList(cardList) {\n    let cardTable = document.getElementById(\"cardTableId\");\n    cardTable.innerHTML = \"\";\n    let table = document.createElement(\"table\");\n    let t1body = document.createElement(\"tbody\");\n    table.id = \"cardTableReferedId\";\n    table.innerHTML = `<thead>\n                              <tr>\n                              <th>Kart ID</th>\n                              <th>Kart Son Kullanma Tarihi</th>\n                              <th>Kullancı</th>\n                              <th>Şehir</th>\n                              <th>Olanak</th>\n                              <th>Sil</th>\n                              <th>Düzenle</th>\n                              </trcardListcardListcardList>\n\t\t\t\t    \t\t\t    </thead>`;\n    cardTable.appendChild(table);\n    for(let i = 0; i<cardList.length; i++) {\n      let row = document.createElement(\"tr\");\n      let cell = document.createElement(\"td\");\n      let cellText = document.createTextNode(cardList[i]._identity);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n    \n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(cardList[i]._expiryDate);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(cardList[i].applicant);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(cardList[i].city[0]);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n            //}\n\n      cell = document.createElement(\"td\");\n      cellText = document.createTextNode(cardList[i].opportunity);\n      cell.appendChild(cellText);\n      row.appendChild(cell);\n\n      row.appendChild(cell);\n      let cellButtonDelete = document.createElement(\"button\");\n      cell = document.createElement(\"td\");\n      cellButtonDelete.innerHTML = \"Sil\";\n\n      cellButtonDelete.addEventListener(\"click\", function () {\n        let confirmDelete = confirm (\"Kart bilgisini silmek istediğinize emin misiniz? \\n Dikkat, Bu işlem geri alınamaz!\");\n        if (confirmDelete) {\n        DataStorage.cards = DataStorage.cards.filter (card => (card._identity) != (cardList[i]._identity));\n        ListManager.refreshCardTable();\n        }\n        return;\n\n      } );\n\n      cell.appendChild(cellButtonDelete);\n      row.appendChild(cell);\n\n      cell = document.createElement(\"td\");\n      let cellEditButton = document.createElement(\"button\");\n      cellEditButton.innerHTML = \"Düzenle\";\n      cellEditButton.addEventListener(\"click\", function() {\n        window.location.href = '#cardPage';\n        TableManager.editCardTable(cardList,i);\n        return;\n        \n      });\n      cell.appendChild(cellEditButton);\n      row.appendChild(cell);\n       t1body.appendChild(row);\n\n     }\n     table.appendChild(t1body);\n     cardTable.appendChild(table);\n    }\n\n  static refreshCardTable() {\n    let element = document.getElementById(\"cardTableReferedId\");\n    element.innerHTML = '';\n    element.parentNode.removeChild(element);\n    ListManager.createCardList(DataStorage.cards);\n  }\n\n  /**\n   * Son kullanıcının kaldırıldığı kısım\n   */\n  static removeLast() {\n // DataStorage.applicants.pop();\n  DataStorage.applicants.splice(-1,1)\n}\n}","import { DataStorage } from \"./DataStorage\";\nimport { ListManager } from \"./ListManager\";\n\n\nexport class Verifications {\n\n  static checkText(text) {\n  }\n\n  static checkID(idNumber?,cardId?) {\n    let helper = 0;\n      for(let i = 0; i<DataStorage.applicants.length; i++) {\n        if(idNumber.value == DataStorage.applicants[i].ApplicantID){\n          let confirmDelete = confirm (\"Girelen Id'ye (\" + idNumber.value+ \") sahip kayıtlı bir kullanıcı var.\\n Üzerine yazmak istediğinize emin misiniz? \\n Dikkat, Bu işlem geri alınamaz!\");\n          if (confirmDelete) {\n          let b = DataStorage.applicants.filter(function (e) {\n            return e.value === idNumber.value;\n        });\n          DataStorage.applicants.splice(DataStorage.applicants.findIndex(e => e.value === idNumber.value),1);\n          return true;\n        }else {helper =1; return false;}\n      }\n    }\n    if(helper==0) {return true;}\n    else {return false;}\n  }\n\n  static validateID(tcNumber) { \n    let myId = tcNumber;\n    tcNumber = (tcNumber.value).toString();\n    \n    // T.C. identity number 11 haneli olmalı\n    if (myId.value.length != 11)\n     { alert(\"Kimlik numrasını \" + myId.value.length+\" hane girdiniz. \\n Lütfen kimlik numaranızı 11 hane giriniz\"); return false; }\n    \n    const digits = tcNumber.split('');\n    // son 2 hane (10. and 11.) validasyon için tutulur\n    const d10 = Number(digits[9]);\n    const d11 = Number(digits[10]);\n\n    // ilk 10 hane toplanır/ tek haneler toplanır / çift haneler toplanır\n    let sumOf10 = 0;\n    let evens = 0;\n    let odds = 0;\n    \n    digits.forEach((digitNumber, index) => {\n      digitNumber = Number(digitNumber);\n        if (index < 10) sumOf10 += digitNumber;\n        if (index < 9) {\n            if ((index + 1) % 2 === 0) {\n                evens += digitNumber;\n            } else {\n                odds += digitNumber;\n            }\n        }\n    });\n    \n    // ilk 10 hane toplamının mod 10 nu 11. haneyi vermelidir.\n    if (sumOf10 % 10 != d11) \n    {alert(\"Girilen kimlik numarası hatalıdır! \\n Lütfen tekrar giriniz\");\n   return false; }\n    \n    // tek haneler tplamının 7 katından çift haneler çıkarılınca elde edilen değerin mod 10 nu 10. haneyi vermelidir\n    if (((odds * 7) - (evens)) % 10 != d10)\n    {alert(\"Girilen kimlik numarası hatalıdır! \\n Lütfen tekrar giriniz\");\n    return false; }\n    \n    return true;\n   }\n\n  static checkDate(inputDate) {\n    let today = new Date().toLocaleDateString()\n    var todayDate = Date.parse(today);\n    var enteredDate = Date.parse(inputDate);\n    if (todayDate < enteredDate) {\n    alert (\"Error!\");inputDate\n}\n  }\n\n  static checkCityOpportunity(city,opportunity) {\n        let helper = 0;\n    let cityLast = city.value.toUpperCase();\n    let opportunityLast = opportunity.value.toUpperCase();\n      for(let i = 0; i<DataStorage.cities.length; i++) {\n        if(cityLast == DataStorage.cities[i].CityName){\n          let confirmDelete = confirm (\"Girelen  (\" + cityLast + \"  ve \" + opportunityLast+ \") için mevcut bir kayıt var.\\n Üzerine yazmak istediğinize emin misiniz? \\n Dikkat, Bu işlem geri alınamaz!\");\n          if (confirmDelete) {\n            DataStorage.cities = DataStorage.cities.filter (cityOpportunity => (cityOpportunity.CityName+cityOpportunity.OpportunityName) != (DataStorage.cities[i].CityName+DataStorage.cities[i].OpportunityName));\n          return true;\n        }else {helper =1; return false;}\n      }\n    }\n    if(helper==0) {return true;}\n    else {return false;}\n  }\n\n  static checkCardExistence(myApplicant, mycity, cardList,idNumber) {\n                  let controller = 0;\n                for(let i = 0; i<cardList.length; i++) {\n                  let id =cardList[i].applicant.toString();\n                  let myApplicantId = (id.slice(id.length - 11));\n                  if(myApplicant.toString() == myApplicantId) {\n                    if(mycity == cardList[i].city.toString()) {\n                      let confirmDelete = confirm (\"Seçilen \" + myApplicant+ \" kullanıcısı için \" + mycity + \" şehri  adına daha önce kart oluşturulmuştur.\\n Üzerine yazmak istediğinize emin misiniz? \\n Dikkat, Bu işlem geri alınamaz!\");\n                      if (confirmDelete) {\n                        var ele_rem1 = cardList.splice(i, 1);\n                        return true;\n                      } else {controller =1; return false;}\n                    }\n                  }\n\n                }\n                if(controller==0) {return true;}\n                else {return false;}\n\n          }\n\n}","import { Applicant } from './Applicant';\nimport { City } from \"./City\";\nimport { ICard } from \"./typeScriptFiles/interface/ICard\";\n\n/**\n * Programda tanımlı kartların ID, fiyat, son kullanım tarihi, kullanıcının ve şehir-olanağın tanımlandığı sınıf\n */\nexport class Card implements ICard {\n  private _identity: number;\n  private _price: number;\n  private _expiryDate: string;\n  private city:string ;\n  private applicant:string;\n  private opportunity: string;\n\n  constructor(identity: number, price:number, expiryDate: string, applicant:string, city:string, opportunity:string){\n    this._identity = identity;\n    this._price = price;\n    this._expiryDate = expiryDate;\n    this.applicant = applicant;\n    this.city = city;\n    this.opportunity = opportunity;\n\n  }\n  User: string;\n  City: string;\n  Opportunity: string;\n  CardIdentitty: number;\n  CardPrice: number;\n  CardExpiryDate: Date;\n\n\n  get Identity() {\n    return this._identity;\n  }\n  set Identitty(identity) {\n    this._identity = identity;\n  }\n\n  get Price() {\n    return this._price;\n  }\n  set Price(price) {\n    this._price = price;\n  }\n\n  get ExpiryDate() {\n    return this._expiryDate;\n  }\n  set ExpiryDate(expiryDate) {\n    this._expiryDate = expiryDate;\n  }\n\n\n}","import { ICity } from \"./typeScriptFiles/interface/ICity\";\n\n/**\n * Programdaki şehir isimlerinin tutulduğu sınıf\n */\nexport class City implements ICity {\n  private _cityName : string;\n  private _opportunityName: string;\n  private _perYearPrice: number;\n  private _topLimitYearValue: number;\n  private _CityOpportunityId : number;\n\n  constructor(cityName:string, opportunityName: string, perYearPrice: number, topLimitYearValue: number, CityOpportunityId : number){\n    this._cityName = cityName; \n    this._opportunityName = opportunityName;\n    this._perYearPrice = perYearPrice;\n    this._topLimitYearValue = topLimitYearValue;\n    this.CityOpportunityId = CityOpportunityId\n}\n\n     get CityName() {\n       return this._cityName;\n     }\n     set CityName(cityName) {\n       this._cityName = cityName;\n     }\n\n     get OpportunityName() {\n      return this._opportunityName;\n    }\n    set OpportunityName(name) {\n      this._opportunityName=name;\n    }\n  \n    get PerYearPrice () {\n      return this._perYearPrice;\n    }\n    set PerYearPrice (perYearPrice) {\n      this._perYearPrice = perYearPrice;\n    }\n  \n    get TopLimitYearValue () {\n      return this._topLimitYearValue;\n    }\n    set TopLimitYearValue (topLimitYearValue) {\n      this._topLimitYearValue = topLimitYearValue;\n    }\n    get CityOpportunityId () {\n      return this._CityOpportunityId;\n    }\n    set CityOpportunityId (CityOpportunityId) {\n      this._CityOpportunityId = CityOpportunityId;\n    }\n}","import { Applicant } from './Applicant';\nimport { ApplicantManager } from './ApplicantManager';\nimport { CardManager } from './CardManager';\nimport { City } from './City';\nimport { CityManager } from './CityManager';\nimport { DataStorage } from './DataStorage';\nimport { ListManager } from './ListManager';\n// Import stylesheets\nimport './style.css';\nimport { TableManager } from './TableManager';\n/**\n * Listeleri başlangıç halinde kapalı hale getiren kısım\n */\nconst userTableSection: HTMLElement = document.getElementById(\"userListSection\");\nuserTableSection.style.display = \"none\";\nconst cityOpportunityListSection: HTMLElement = document.getElementById(\"cityOpportunityListSection\");\ncityOpportunityListSection.style.display = \"none\";\nconst cardListSection: HTMLElement = document.getElementById(\"cardListSection\");\ncardListSection.style.display = \"none\";\n/**\n * Doğum taihini max olarak bugünün tarihine ayarlayan kısım\n */\ndocument.getElementById('applicantBirthDateAttach').max = new Date(new Date().getTime() - new Date().getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n/**\n * Default olarak kullanıcı ve şehir-olanakların eklendiği kısım\n */\nlet cityList = DataStorage.createCityList();\nlet applicantList = DataStorage.createApplicantlist();\n/**\n * Yeni Kullancı kısmında kaydet butonuna tıklanınca karşılaşılacak senaryo\n */\nconst saveNewUser: HTMLElement = document.getElementById(\"newUserSavingButton\");\nconst userForm : HTMLFormElement = document.getElementById(\"userForm\") as HTMLFormElement;\nsaveNewUser.onclick = function() {    \n  if(userForm.reportValidity()){\n    ApplicantManager.createApplicantObject();\n    TableManager.resetUserPage();\n}\n};\n/**\n * * Yeni Kullancı kısmında listele butonuna tıklanınca karşılaşılacak senaryo\n */\nconst listUsers: HTMLElement = document.getElementById(\"listUserButton\");\nlistUsers.onclick = function() { \n  let myUserTableList = document.getElementById(\"userListSection\");\n  userTableSection.style.display = \"inline\";\n  cityOpportunityListSection.style.display = \"none\";\n  cardListSection.style.display = \"none\";\n  ListManager.createUserList(DataStorage.applicants);\n  }\n/**\n *  * Yeni Şehir-olanak kısmında kaydet butonuna tıklanınca karşılaşılacak senaryo\n */\nconst saveNewCityOpportunity: HTMLElement = document.getElementById(\"newCityAndOpportunitySavingButton\");\nconst cityForm : HTMLFormElement = document.getElementById(\"cityForm\") as HTMLFormElement;\nsaveNewCityOpportunity.onclick = function() { \n      if(cityForm.reportValidity()){\n      CityManager.createCityObject();\n      TableManager.resetCityPage();\n\n      }\n}\n/**\n * Yeni Şehir-olanak kısmında listele butonuna tıklanınca karşılaşılacak senaryo\n */\nconst listCitiesOpportunities: HTMLElement = document.getElementById(\"listCityOpportunityButton\");\nlistCitiesOpportunities.onclick = function() {\n  let myCityOpportunityTableList = document.getElementById(\"cityOpportunityListSection\");\n  userTableSection.style.display = \"none\";\n  cityOpportunityListSection.style.display = \"inline\";\n  cardListSection.style.display = \"none\";\n  ListManager.createCityOpportunityList(DataStorage.cities);\n}\n/**\n * Yeni Kart kısmında kaydet butonuna tıklanınca karşılaşılacak senaryo\n */\nconst saveNewCard: HTMLElement = document.getElementById(\"newCardSavingButton\");\nconst cardForm : HTMLFormElement = document.getElementById(\"cardForm\") as HTMLFormElement;\nsaveNewCard.onclick = function() {\n    CardManager.createCardObject();\n    TableManager.resetCardPage();\n    alert(\"Kart başarılı bir şekilde listeye eklendi.\");\n}\n/**\n * Yeni Kart kısmında listele butonuna tıklanınca karşılaşılacak senaryo\n */\nconst listCards: HTMLElement = document.getElementById(\"listCardButton\");\nlistCards.onclick = function() {\n  let myCityOpportunityTableList = document.getElementById(\"cardListSection\");\n  userTableSection.style.display = \"none\";\n  cityOpportunityListSection.style.display = \"none\";\n  cardListSection.style.display = \"inline\";\n  ListManager.createCardList(DataStorage.cards);\n}\n/**\n * Kart kaydındaki Select box ların oluşturulduğu kısım  \n */\nlet myUserSelectBox = document.getElementById(\"userField\");\nListManager.createUserSelectList(myUserSelectBox);  \nlet myCityOpportunitySelectBox = document.getElementById(\"cityOpportunityField\");\nListManager.createCityOpportunitySelectList(myCityOpportunitySelectBox);  \nlet myCitySelectBox = document.getElementById(\"checkBoxList\");\nListManager.createCitySelectList(myCitySelectBox,\"İstanbul\");  \n","import { Applicant } from \"./Applicant\";\nimport { DataStorage } from \"./DataStorage\";\nimport { ListManager } from \"./ListManager\";\nimport { TableManager } from \"./TableManager\";\nimport { Verifications } from \"./Verifications\";\n/**\n *  * Program başvuran kişinin bilgilerinin oluşturulduğu ve verisaklamaya gönderildiği cardList sınıf\n */\nexport class ApplicantManager {\n\n  static createApplicantObject () {\n    let applicantName =<HTMLInputElement>document.getElementById(\"applicantNameAttach\");\n    Verifications.checkText(applicantName);\n    let applicantSurname =<HTMLInputElement>document.getElementById(\"applicantSurnameAttach\");\n    let applicantBirthDate =<HTMLInputElement>document.getElementById(\"applicantBirthDateAttach\");\n    Verifications.checkDate(applicantBirthDate);\n    let applicantID =<HTMLInputElement>document.getElementById(\"applicantIDAttach\");\n\n    const  selectedTypeOfApplicantBasedOnAgeInput = <HTMLInputElement>(document.getElementById(\"citizenTypeSelection\"));\n    let typeOfApplicantBasedOnAge;\n    switch (Number(selectedTypeOfApplicantBasedOnAgeInput.value)) {\n      case 0 : {   typeOfApplicantBasedOnAge = \"Çocuk\"; break;  }\n      case 2 : {   typeOfApplicantBasedOnAge = \"Yaşlı\"; break;  }\n      case 1 : {   typeOfApplicantBasedOnAge = \"Normal\"; break;  }\n    }\n      \n    const selectedTypeOfApplicantBasedOnEducationInput = <HTMLInputElement> (document.getElementById(\"applicatTypeSelection\"));\n    let typeOfApplicantBasedOnEducation;\n    switch(selectedTypeOfApplicantBasedOnEducationInput.value) {\n      case \"0\": { typeOfApplicantBasedOnEducation = \"Öğrenci\";  break; }\n      case \"1\": { typeOfApplicantBasedOnEducation = \"Sivil\";  break; }\n      case \"2\": {  typeOfApplicantBasedOnEducation = \"--\";  }\n    }\n    if(Verifications.checkID(applicantID)){\n      if(Verifications.validateID(applicantID)) {\n    let newApplicant = new Applicant(applicantName.value.toUpperCase(), applicantSurname.value.toUpperCase(), applicantBirthDate.value, Number(applicantID.value), typeOfApplicantBasedOnAge, typeOfApplicantBasedOnEducation);\n\n    DataStorage.applicants.push(newApplicant);\n    ListManager.updateUserSelectionList();\n    alert(\"Kullanıcı başarılı bir şekilde listeye eklendi.\");\n      }\n  }\n  \n  }\n}\n","import { City } from './City';\nimport { DataStorage } from './DataStorage';\nimport { ListManager } from './ListManager';\nimport { Verifications } from './Verifications';\n/**\n * Şehir olanak bilgilerininin alınıp yeni şehir nesnelerinin oluşturulduğu sınıf\n */\nexport class CityManager {\n\n  static createCityObject() {\n    let cityName = <HTMLInputElement>(document.getElementById(\"cityNameAttach\"));\n    let opportunityName = <HTMLInputElement>(document.getElementById(\"opportunityNameAttach\"));\n    let perYearPrice = <HTMLInputElement>(document.getElementById(\"perYearPriceAttatch\"));\n    let topLimitYearValue = <HTMLInputElement>(document.getElementById(\"topLimitYearValueAttach\"));\n    let CityOpportunityId = Math.floor(Math.random() * 10000);\n\n    if(Verifications.checkCityOpportunity(cityName,opportunityName)){\n    let newCityAndOpportunity = new City(cityName.value.toUpperCase(), opportunityName.value.toUpperCase(), Number(perYearPrice.value), \n    Number(topLimitYearValue.value), Number(CityOpportunityId));    \n    DataStorage.cities.push(newCityAndOpportunity);\n    ListManager.updateCityOpportunitySelectionList();\n    ListManager.updateCitySelectionList();\n    alert(\"Şehir-Olanak başarılı bir şekilde listeye eklendi.\");\n\n  }\n  }\n}","import { Applicant } from './Applicant';\nimport { Card } from './Card';\nimport { DataStorage } from './DataStorage';\nimport { Verifications } from './Verifications';\n/**\n * Kart bilgilerinin derlenip yeni kart nesnelerinin oluşturulduğu sınıf\n */\nexport class CardManager {\n\n  static createCardObject() {\n    let cardIdendity = Math.floor(Math.random() * 100000000);\n    let cardPrice = <HTMLInputElement> document.getElementById(\"cardPriceAttach\");\n\n    let todayDate = new Date();\n    let year = todayDate.getFullYear();\n    let month = todayDate.getMonth();\n    let day = todayDate.getDate();\n    let addedExpiryDateYear = 4;\n    let expiryDateValue = new Date(year + addedExpiryDateYear, month, day);\n    let expiryDate = (expiryDateValue.toDateString());\n    \n    const userSelector :HTMLElement = document.getElementById(\"myUserSelect\");\n    let selectedUserID = userSelector.options[userSelector.selectedIndex].value;\n    const resultUser = DataStorage.applicants.filter(item => item.ApplicantID == selectedUserID);\n\n\n    const citySelector :HTMLElement = document.getElementById(\"myCityOpportunitySelect\");\n    let selectedCityName = citySelector.options[citySelector.selectedIndex].value;\n    let resultCity = DataStorage.cities.filter(item => item.CityName == selectedCityName);\n   \n    let checkedUser : any = [];\n    for(let i =0; i<resultUser.length; i++){\n      checkedUser.push(resultUser[i].ApplicantName.toUpperCase() +\" \" + resultUser[i].ApplicantSurname.toUpperCase() + \" \" + resultUser[i].ApplicantID);\n      var myApplicant = resultUser[i].ApplicantID;\n      var typeCitizen = resultUser[i].ApplicantTypeBasedOnAge;\n      var typeApplicant = resultUser[i].ApplicantTypeBasedOnEducation;\n    }\n\n    let checkedCity : any = [];\n    for(let i =0; i<resultCity.length; i++){\n      checkedCity.push(resultCity[i].CityName.toUpperCase());\n    }\n\n    const opportunitySelector : HTMLElement = document.getElementById(\"checkBoxList\");\n    let element = <HTMLInputElement> document.getElementById(\"checkBoxList\");  \n    if (element.checked) {  }\n\n    var inputElems = document.getElementsByTagName(\"input\");\n    let checkedOpportunity: any =[]; \n    for (var i=0; i<inputElems.length; i++) {       \n       if (inputElems[i].type == \"checkbox\" && inputElems[i].checked == true){\n\n         checkedOpportunity.push( inputElems[i].value );\n        }\n    }\n    let result  = 0 ;\n    for(let i = 0; i<DataStorage.cities.length; i++){\n      if(checkedCity[0]==DataStorage.cities[i].CityName) {\n        for(let j = 0; j<checkedOpportunity.length; j++){\n          if(checkedOpportunity[j]==DataStorage.cities[i].OpportunityName) {\n              result = result + DataStorage.cities[i].PerYearPrice * DataStorage.cities[i].TopLimitYearValue ;\n          }\n        }\n      }\n    }\n    if(typeCitizen == \"Çocuk\" || typeCitizen == \"Yaşlı\") {\n      var finalPrice = 0;\n    } else {\n      if(typeApplicant == \"Öğrenci\") {\n        finalPrice = (result+Number(cardPrice.value))  - ((result+Number(cardPrice.value))/5);\n      }\n    }\n    if (Verifications.checkCardExistence(myApplicant,checkedCity,DataStorage.cards,cardIdendity)) {\n        let newCard = new Card (Number(cardIdendity), Number(cardPrice.value), expiryDate, checkedUser,checkedCity , checkedOpportunity ); \n        DataStorage.cards.push(newCard);\n        alert(\"Normal ücret ; \\n\" +\" Kart Ücreti :\" + Number(cardPrice.value) +\"  Toplam Olanak Fiyatı :\"  + result +\"\\n Ödenecek tutar : \" + finalPrice );\n     }\n  }\n}\n"],"names":["$fd0fdee7cc99b0ec$export$204867cd0e973d3","applicantName1","applicantSurname1","applicantBirthDate1","_applicantID","typeOfApplicantBasedOnAge","typeOfApplicantBasedOnEducation","_applicantName","_applicantSurname","_applicantBirthDate","_typeOfApplicantBasedOnAge","_typeOfApplicantBasedOnEducation","applicantName","applicantSurname","applicantBirthDate","applicantID","applicantTypeBasedOnAge","applicantTypeBasedOnEducation","$c64b5b56ca879e64$export$d38cf39d930860d4","listApplicants","alert","this","applicants","createCityList","cities","push","CityName","OpportunityName","PerYearPrice","TopLimitYearValue","CityOpportunityId","createApplicantlist","ApplicantName","ApplicantSurname","ApplicantBirthDate","ApplicantID","ApplicantTypeBasedOnAge","ApplicantTypeBasedOnEducation","Array","cards","$a121dc44d469e972$export$b97c69811caccf93","userList","i","document","getElementById","defaultValue","toString","value","substring","filter","applicant","$7326a9a49478473b$export$263792f2d63ecf9c","refreshUserTable","cityList","cityOpportunity","refreshCityOpportunityTable","cardList","id","myApplicantId","slice","length","city","_price","card","CardIdentitty","refreshCardTable","reset","createUserSelectList","myUser","selectList","createElement","innerHTML","appendChild","option","text","updateUserSelectionList","myUserSelectBox","createCityOpportunitySelectList","myCityOpportunity","selectListCity","onchange","evt","target","createCitySelectList","element","i1","indexOf","myCitySelectBox","citiesName","checkBoxList","myCityOpportunitySelect","options","selectedIndex","citiesList","item","type","name","label","htmlFor","createTextNode","updateCityOpportunitySelectionList","myCityOpportunitySelectBox","updateCitySelectionList","createUserList","userTable","table","t1body","row","cell","cellText","cellButtonDelete","addEventListener","confirm","cellEditButton","window","location","href","editUserTable","parentNode","removeChild","createCityOpportunityList","cityOpportunityList","cityOpportunityTable","editCityTable","createCardList","cardTable","_identity","_expiryDate","opportunity","editCardTable","removeLast","splice","$f036d53082a8076e$export$b8a31334446f8b6","idNumber","cardId","helper","e","findIndex","tcNumber","myId","digits","split","d10","Number","d11","sumOf10","evens","odds","forEach","digitNumber","index","inputDate","today","Date","toLocaleDateString","parse","cityLast","toUpperCase","opportunityLast","myApplicant","mycity","controller","$b239c4defcbf7ebf$export$34cdf0c8e3b348f8","identity1","price1","expiryDate1","identity","price","expiryDate","$2ca65f593c1d3dcd$export$60fec07c4d4430d6","cityName1","opportunityName","perYearPrice1","topLimitYearValue1","CityOpportunityId1","_cityName","_opportunityName","_perYearPrice","_topLimitYearValue","cityName","perYearPrice","topLimitYearValue","_CityOpportunityId","$1d0b25271a397a80$var$userTableSection","style","display","$1d0b25271a397a80$var$cityOpportunityListSection","$1d0b25271a397a80$var$cardListSection","max","getTime","getTimezoneOffset","toISOString","$1d0b25271a397a80$var$saveNewUser","$1d0b25271a397a80$var$userForm","onclick","reportValidity","checkText","checkDate","selectedTypeOfApplicantBasedOnAgeInput","checkID","validateID","newApplicant","createApplicantObject","resetUserPage","$1d0b25271a397a80$var$saveNewCityOpportunity","$1d0b25271a397a80$var$cityForm","Math","floor","random","checkCityOpportunity","newCityAndOpportunity","createCityObject","resetCityPage","$1d0b25271a397a80$var$saveNewCard","cardIdendity","cardPrice","todayDate","year","getFullYear","month","getMonth","day","getDate","toDateString","userSelector","selectedUserID","resultUser","citySelector","selectedCityName","resultCity","checkedUser","typeCitizen","typeApplicant","checkedCity","checked","inputElems","getElementsByTagName","checkedOpportunity","i2","result","i3","j","finalPrice","checkCardExistence","newCard","createCardObject","resetCardPage","$1d0b25271a397a80$var$myUserSelectBox","$1d0b25271a397a80$var$myCityOpportunitySelectBox","$1d0b25271a397a80$var$myCitySelectBox"],"version":3,"file":"index.76c5a3e0.js.map"}